{"version":3,"sources":["translator.jsx"],"names":["ElementView","React","Component","constructor","props","state","disabled","navigator","onLine","window","addEventListener","onlineChange","bind","setState","format","prefix","split","word","RegExp","map","element","index","array","length","backgroundColor","onClickEdit","editCallback","row","onClick","now","Date","setHours","updateDate","toLocaleDateString","refreshCallback","render","fontSize","borderBottom","overflow","color","expire","height","loc","ListView","renderElements","list","name","AddView","style","width","AddInput","value","componentDidMount","isDate","field","$","pickadate","hiddenPrefix","close","getValue","refs","input","onChange","hasDropDown","e","target","margin","choice","border","toISOString","slice","LanguageView","dictionary","search","updateList","mode","fields","rowEdited","setDictionary","self","monthCounts","expireCount","forEach","elem","nextDue","getMonth","filter","entry","text","toLocaleLowerCase","indexOf","count","pos","sort","a","b","getTime","onAddMode","onCancel","onAdd","values","updateValues","dueMonth","month","setSearch","clearFilter","setFields","getAddForm","headerRowCount","marginBottom","bottom","left","Main","setupView","root","ReactDOM"],"mappings":"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","file":"translator.js","sourcesContent":["class ElementView extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            disabled: !navigator.onLine,\n        };\n        window.addEventListener('online',  this.onlineChange.bind(this));\n        window.addEventListener('offline', this.onlineChange.bind(this));\n    }\n\n    onlineChange() {\n        this.setState({\n            disabled: !navigator.onLine,\n        });\n    }\n\n    format() {\n        if (this.props.prefix !== '') {\n            const split = this.props.word.split(new RegExp(this.props.prefix, 'i'));\n            return split.map((element, index, array) => {\n                return index>=array.length-1 ? element :\n                    [\n                        element,\n                        <span style={{\n                            backgroundColor: 'yellow',\n                        }}>\n                        {this.props.prefix}\n                        </span>\n                    ]\n            });\n        }\n        return <span>{this.props.word}</span>;\n    }\n\n    onClickEdit() {\n        this.props.editCallback(this.props.row);\n    }\n\n    onClick() {\n        const now = new Date();\n        now.setHours(0,0,0,0);\n//        localStorage.setItem(`lastService_${this.props.name}`, now.getTime());\n/*        if(this.props.expire) {\n        } else {\n            localStorage.clear(`lastService_${this.props.name}`);\n        }\n        console.log(this.props);*/\n\n        this.setState({\n            disabled: true,\n        }, () => {\n//            this.props.refreshCallback(this.props.prefix);\n            updateDate(this.props.row, now.toLocaleDateString('en'), ()=> {\n                this.props.refreshCallback(this.props.prefix);\n                this.setState({\n                    disabled: !navigator.onLine,\n                });\n            });\n        });\n\n\n//        this.props.refreshCallback(this.props.prefix);\n//        console.log(this.props.row, now.toLocaleDateString());\n\n/*        const request = new XMLHttpRequest();\n        request.open('POST',`last_service?id=${this.props.name}&set=${!this.props.expire}`,true);\n        request.addEventListener('load', function(e) {\n            console.log(request.response);\n        });\n        request.send();*/\n\n\n    }\n\n    render() {\n        return <div\n            className=\"text\"\n            style={{\n                fontSize: 18,\n                borderBottom: \"1px gray solid\",\n//                maxHeight: 36,\n                overflow: 'hidden',\n                color: this.props.expire ? '#b00' : '#000',\n            }}>\n            <pre>\n            { this.format() }\n            </pre>\n            <button\n                disabled={this.state.disabled}\n                style={{\n                    height: 30,\n                    fontSize: 18,\n                }}\n                onClick={this.onClick.bind(this)}>\n                {loc('Service Done Today')}\n            </button>\n            <button\n                disabled={this.state.disabled}\n                style={{\n                    height: 30,\n                    fontSize: 18,\n                }}\n                onClick={this.onClickEdit.bind(this)}>\n                {loc('Edit')}\n            </button>\n        </div>;\n    }\n}\n\nclass ListView extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    renderElements() {\n        return this.props.list.map(element => {\n            return <ElementView prefix={this.props.prefix}\n                name={element.name} word={element.word} expire={element.expire}\n                row={element.row}\n                refreshCallback={this.props.refreshCallback}\n                editCallback={this.props.editCallback}\n            />\n        });\n    }\n\n    render() {\n        return <div>{this.renderElements()}</div>;\n    }\n}\n\nclass AddView extends React.Component {\n    render() {\n        return <div style={this.props.style}>\n            <button\n                disabled={this.props.disabled}\n                onClick={this.props.onClick} style={{\n                fontSize: 20,\n                width: \"100%\",\n                backgroundColor: 'silver',\n                height: '100%',\n            }}>{loc('Add')}</button>\n        </div>;\n    }\n}\n\nclass AddInput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: props.value,\n        };\n    }\n\n    componentDidMount() {\n        if (isDate(this.props.field)) {\n            $(`#field_${this.props.index}`).pickadate({\n                hiddenPrefix: `field_${this.props.index}`,\n                close: loc('close'),\n            });\n        }\n    }\n\n    getValue() {\n        if (isDate(this.props.field)) {\n            return $(`input[name=field_${this.props.index}_submit]`)[0].value;\n        }\n        return this.refs.input.value;\n    }\n\n    onChange(value) {\n        this.setState({\n            value\n        });\n    }\n\n    render() {\n        return <div>\n            <div style={{\n                fontSize: 24,\n            }}>{loc(this.props.field)}</div>\n            {\n                hasDropDown(this.props.field) ?\n                    <select ref='input' value={this.state.value}\n                            onChange={e => this.onChange(e.target.value)}\n                            style={{\n                                width: 100,\n                                height: 48,\n                                margin: -1,\n                                fontSize: 24,\n                            }}\n                    >\n                        { hasDropDown(this.props.field).map(choice =>\n                            <option value={choice}>{loc(choice)}</option>\n                        )}\n                    </select> :\n                    <input className={isDate(this.props.field) ? 'datepicker' :''}\n                       id={`field_${this.props.index}`} ref='input' style={{\n                        width: '100%',\n                        border: '1px solid black',\n                        height: 48,\n                        margin: -1,\n                        fontSize: 24,\n                    }}\n                    value={this.state.value}\n                    data-value={isDate(this.props.field) && this.state.value ? new Date(this.state.value).toISOString().slice(0,10) : ''}\n                    onChange={e => this.onChange(e.target.value)}\n                    />\n            }\n        </div>;\n    }\n}\n\nclass LanguageView extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dictionary: props.dictionary,\n            prefix: props.search,\n        };\n        const list = this.updateList(props.search || '', this.state);\n        this.state.mode = null;\n        this.state.fields = [];\n        this.state.rowEdited = 0;\n        this.state.disabled = !navigator.onLine;\n        window.addEventListener('online',  this.onlineChange.bind(this));\n        window.addEventListener('offline', this.onlineChange.bind(this));\n    }\n\n    onlineChange() {\n        this.setState({\n            disabled: !navigator.onLine,\n        });\n    }\n\n    setDictionary(dictionary, search) {\n        const self = this;\n        this.setState({\n            dictionary,\n            prefix: search,\n        }, () => {\n            self.onChange();\n        });\n    }\n\n    onChange() {\n        if(this.refs.input)\n            this.updateList(this.refs.input.value);\n    }\n\n    updateList(prefix, state) {\n        const monthCounts = [];\n        let expireCount = 0;\n        let list = this.state.dictionary;\n        list.forEach((elem) => {\n            monthCounts[elem.nextDue.getMonth()+1] = (monthCounts[elem.nextDue.getMonth()+1] || 0) + 1;\n            if(elem.expire) {\n                expireCount ++;\n            }\n        });\n        list = list.filter(entry => {\n            const word = entry.text;\n            return word.toLocaleLowerCase().indexOf(prefix.toLocaleLowerCase())>=0;\n        });\n        const count = list.length;\n        list = list.map(entry => {\n            const word = entry.text;\n            return {\n                word: word,\n                pos: word ? word.indexOf(prefix) : -1,\n                name: entry.name,\n                expire: entry.expire,\n                row: entry.row,\n                nextDue: entry.nextDue,\n            };\n        });\n\n        list.sort((a,b) => {\n            if (a.expire !== b.expire) {\n                return a.expire ? -1 : 1;\n            }\n            if (a.nextDue.getTime() !== b.nextDue.getTime()) {\n                return a.nextDue.getTime() - b.nextDue.getTime();\n            }\n\n            return a.pos - b.pos;\n        });\n//        list = list.slice(0, 10);\n//        list = list.map(element => element.word);\n        if (state) {\n            state.prefix = prefix;\n            state.list = list;\n            state.count = count;\n            state.monthCounts = monthCounts;\n            state.expireCount = expireCount;\n        } else {\n            this.setState({\n                prefix,\n                list,\n                count,\n                monthCounts,\n                expireCount,\n            });\n        }\n        return list;\n    }\n\n    onAddMode(row) {\n        this.setState({\n            mode: 'add',\n            rowEdited: row || 0,\n        });\n    }\n\n    onCancel() {\n        this.setState({\n            mode: null,\n        });\n    }\n\n    onAdd() {\n        const values = [];\n        this.state.fields.forEach((field, index) => {\n            const input = this.refs[`addinput_${index}`];\n            values[index] = input\n                ? input.getValue()\n                : '';\n        });\n        updateValues(this.state.rowEdited, values, ()=> {\n            this.props.refreshCallback(this.state.prefix);\n            this.setState({\n                mode: null,\n            });\n        });\n    }\n\n    dueMonth(month) {\n        this.setSearch(`${loc('month')}: ${month}.`);\n    }\n\n    clearFilter() {\n        this.setSearch('');\n    }\n\n    setSearch(search) {\n        const self = this;\n        this.setState({\n            prefix: search,\n        }, () => {\n            self.onChange();\n        });\n    }\n\n    setFields(fields) {\n        this.setState({\n            fields\n        });\n    }\n\n    getAddForm(row) {\n        let list = this.state.dictionary;\n        const entry = list[row-headerRowCount-1];\n\n        return this.state.fields.map((field, index) => {\n            return field==='row' ? [] : <AddInput\n                ref={`addinput_${index}`} field={field} index={index}\n                value={entry ? entry.values[field] : ''}\n            />;/*[\n                <div style={{\n                    fontSize: 24,\n                }}>{loc(field)}</div>,\n                <input className={'datepicker'} ref={`field_${index}`} style={{\n                    width: '100%',\n                    border: '1px solid black',\n                    height: 48,\n                    margin: -1,\n                    fontSize: 24,\n                }}/>,\n            ];*/\n        });\n    }\n\n    render() {\n        return <div>{this.state.mode === 'add' ?\n            <div>\n                <div style={{\n                    marginBottom: 20,\n                }}>{\n                    this.getAddForm(this.state.rowEdited)\n                }\n                </div>\n                <button style={{\n                    fontSize: 20,\n                    width: \"50%\",\n                    backgroundColor: '#ada',\n//                    position: 'fixed',\n                    bottom: 0,\n//                    height: 60,\n                }} onClick={this.onAdd.bind(this)}>{loc('Save')}</button>\n                <button style={{\n                    fontSize: 20,\n                    color: '#faa',\n                    left: '50%',\n                    width: \"50%\",\n                    backgroundColor: '#a00',\n//                    position: 'fixed',\n                    bottom: 0,\n//                    height: 60,\n                }} onClick={this.onCancel.bind(this)}>{loc('Cancel')}</button>\n            </div>\n            : <div>\n                <AddView\n                    disabled={this.state.disabled}\n                    style={{\n//                    position: 'fixed',\n                    width: '100%',\n                    bottom: 0,\n                }} onClick={() => this.onAddMode.bind(this)(0)}/>\n                <input\n                    ref=\"input\"\n                    value={this.state.prefix}\n                    style={{\n                        border: '1px solid black',\n                        margin: -1,\n                        width: '100vw',\n                        height: 24,\n                        fontSize: 24,\n                    }} onChange={this.onChange.bind(this)}/>\n                <div><span>{this.state.count} {loc('entries')}</span>\n                    &nbsp;\n                    <button disabled={this.state.prefix===''} onClick={this.clearFilter.bind(this)}>{loc('Clear')}</button>\n                    <button disabled={!this.state.monthCounts[1]} onClick={() => this.dueMonth(1)}>{loc('Jan')}</button>\n                    <button disabled={!this.state.monthCounts[2]} onClick={() => this.dueMonth(2)}>{loc('Feb')}</button>\n                    <button disabled={!this.state.monthCounts[3]} onClick={() => this.dueMonth(3)}>{loc('Mar')}</button>\n                    <button disabled={!this.state.monthCounts[4]} onClick={() => this.dueMonth(4)}>{loc('Apr')}</button>\n                    <button disabled={!this.state.monthCounts[5]} onClick={() => this.dueMonth(5)}>{loc('May')}</button>\n                    <button disabled={!this.state.monthCounts[6]} onClick={() => this.dueMonth(6)}>{loc('Jun')}</button>\n                    <button disabled={!this.state.monthCounts[7]} onClick={() => this.dueMonth(7)}>{loc('Jul')}</button>\n                    <button disabled={!this.state.monthCounts[8]} onClick={() => this.dueMonth(8)}>{loc('Aug')}</button>\n                    <button disabled={!this.state.monthCounts[9]} onClick={() => this.dueMonth(9)}>{loc('Sep')}</button>\n                    <button disabled={!this.state.monthCounts[10]} onClick={() => this.dueMonth(10)}>{loc('Oct')}</button>\n                    <button disabled={!this.state.monthCounts[11]} onClick={() => this.dueMonth(11)}>{loc('Nov')}</button>\n                    <button disabled={!this.state.monthCounts[12]} onClick={() => this.dueMonth(12)}>{loc('Dec')}</button>\n                    <button disabled={!this.state.expireCount} onClick={() => this.setSearch(`${loc('expire')}: ${loc('YES')}`)}>{loc('Expired')}</button>\n                </div>\n                <ListView prefix={this.state.prefix} list={this.state.list} refreshCallback={this.props.refreshCallback}\n                    editCallback={this.onAddMode.bind(this)}/>\n            </div>\n        }\n        </div>;\n    }\n}\n\n\nclass Main {\n    static setupView(root, dictionary, refreshCallback, search) {\n        return ReactDOM.render(<LanguageView search={search||''} dictionary={dictionary} refreshCallback={refreshCallback} />, root);\n    }\n}\n\n"]}